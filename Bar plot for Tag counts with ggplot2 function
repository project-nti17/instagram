install.packages('instaR')
library(instaR)
require(httr)
require(rjson)
require(RCurl)
install.packages("curl")

install.packages("ggplot2")
install.packages("colorspace")
library(ggplot2)
install.packages("mapdata")

#Authentication

options(RCurlOptions = list(verbose = FALSE, capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))

## getting callback URL
full_url <- oauth_callback()
full_url <- gsub("(.*localhost:[0-9]{1,5}/).*", x=full_url, replacement="\\1")
message <- paste("Copy and paste into Site URL on Instagram App Settings:", 
                 full_url, "\nWhen done, press any key to continue...")

invisible(readline(message))


app_name <- "xxxxxx"
client_id <- "xxxxxx"
client_secret <- "xxxxxx"
scope = "public_content"

instagram <- oauth_endpoint(
  authorize = "https://api.instagram.com/oauth/authorize",
  access = "https://api.instagram.com/oauth/access_token")  
myapp <- oauth_app(app_name, client_id, client_secret)




ig_oauth<- instaOAuth(client_id, client_secret, scope = c("public_content"))


##################### hashtag

got_count <- getTagCount(tag="gameofthrones", token = ig_oauth)

cr7_count <- getTagCount(tag="cr7", token = ig_oauth)
sport_count <- getTagCount(tag="sport", token = ig_oauth)
nature_count <- getTagCount(tag="nature", token = ig_oauth)
addidas_count <- getTagCount(tag="addidas", token = ig_oauth)
trump_count <- getTagCount(tag="trump", token = ig_oauth)
army_count <- getTagCount(tag="army", token = ig_oauth)
cairo_count <- getTagCount(tag="cairo", token = ig_oauth)
egypt_count <- getTagCount(tag="egypt", token = ig_oauth)
arab_count <- getTagCount(tag="arab", token = ig_oauth)

#################ggplot2 


count <- c("gameofthrones","cr7","sport","nature","addidas","trump","army","cairo","egypt","arab")

tag_no <- c(got_count,cr7_count,sport_count,nature_count,addidas_count,trump_count,army_count,cairo_count,egypt_count,arab_count)
brand.data <- data.frame(Brand=brand, Count=count)

# Create bar plot from brand.data
library(ggplot2)

ggplot(brand.data, aes(brand,count, fill= brand ) ) +
  geom_bar(stat = "identity")

####################################
